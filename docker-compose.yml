version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: billing_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: billing
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: billing_backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: billing
      DB_PORT: 5432
      PORT: 3001
      NODE_ENV: production
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    volumes:
      - backend_uploads:/app/uploads
    ports:
      - "3001:3001"

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: billing_frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "8080:80"

volumes:
  postgres_data:
  backend_uploads: